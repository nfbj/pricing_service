buildscript {
	ext {
		springBootVersion = '2.0.1.RELEASE'
	}
	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gradleGitPropertiesVersion}"
		classpath "gradle.plugin.com.github.spotbugs:gradlePlugin:${spotBugsVersion}"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'com.gorylenko.gradle-git-properties'



apply from: "$rootDir/gradle/test-config.gradle"
apply from: "$rootDir/gradle/code-quality.gradle"

group = 'com.netflix.pricing'
version = "${componentVersion}"
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-data-redis')
	//compile('org.springframework.boot:spring-boot-starter-security') - spring security disabled
	compile('org.springframework.boot:spring-boot-starter-web')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//testCompile('org.springframework.security:spring-security-test') - spring security disabled 
	
	
	//other dependencies
	compileOnly('org.projectlombok:lombok')
	compile("javax.xml.bind:jaxb-api:${jaxbVersion}")
	compile("io.springfox:springfox-swagger2:${swaggerVersion}")
	compile("io.springfox:springfox-swagger-ui:${swaggerVersion}")
	compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.5.0'
	compile group: 'redis.clients', name: 'jedis', version: '2.9.0'
	
	//for dto to entity to event conversion & vice-versa
	compile group: 'org.modelmapper', name: 'modelmapper', version: '1.1.3'
	
	//Inmemory DB for easily bringing up for demo/test
	runtime('com.h2database:h2')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	
	runtime('org.springframework.boot:spring-boot-devtools')
	runtime('mysql:mysql-connector-java')
	
	
	
}
